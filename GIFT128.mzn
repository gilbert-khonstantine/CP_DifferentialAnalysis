include "globals.mzn";
%DDT Table from GIFT Paper
array[0..99,0..7] of 0..1: DDT = array2d(0..99,0..7,[|0,0,0,0,0,0,0,0|0,0,0,1,0,1,0,1|0,0,0,1,0,1,1,0|0,0,0,1,1,0,0,0|0,0,0,1,1,0,0,1|0,0,0,1,1,0,1,0|0,0,0,1,1,0,1,1|0,0,0,1,1,1,0,0|0,0,0,1,1,1,1,1|0,0,1,0,0,1,0,1|0,0,1,0,0,1,1,0|0,0,1,0,1,0,0,1|0,0,1,0,1,0,1,0|0,0,1,0,1,1,0,1|0,0,1,0,1,1,1,0|0,0,1,1,0,1,0,1|0,0,1,1,0,1,1,0|0,0,1,1,1,0,0,0|0,0,1,1,1,0,1,1|0,0,1,1,1,1,0,0|0,0,1,1,1,1,0,1|0,0,1,1,1,1,1,0|0,0,1,1,1,1,1,1|0,1,0,0,0,1,1,1|0,1,0,0,0,1,0,1|0,1,0,0,0,0,1,1|0,1,0,0,1,0,0,1|0,1,0,0,1,1,0,1|0,1,0,1,1,1,1,1|0,1,0,1,0,0,1,0|0,1,0,1,0,1,0,1|0,1,0,1,1,0,0,0|0,1,0,1,1,1,0,0|0,1,0,1,1,1,0,1|0,1,0,1,1,1,1,0|0,1,1,0,0,0,1,1|0,1,1,0,0,0,1,0|0,1,1,0,0,1,1,1|0,1,1,0,1,0,1,0|0,1,1,0,1,1,1,0|0,1,1,1,1,0,1,1|0,1,1,1,0,0,1,0|0,1,1,1,0,1,0,1|0,1,1,1,1,0,0,0|0,1,1,1,1,0,0,1|0,1,1,1,1,0,1,0|0,1,1,1,1,1,0,0|1,0,0,0,0,0,1,1|1,0,0,0,0,1,1,1|1,0,0,0,1,0,1,0|1,0,0,0,1,1,1,1|1,0,0,1,0,0,0,1|1,0,0,1,0,0,1,1|1,0,0,1,0,1,1,0|1,0,0,1,0,1,1,1|1,0,0,1,1,0,0,0|1,0,0,1,1,0,1,0|1,0,0,1,1,1,0,0|1,0,0,1,1,1,0,1|1,0,1,0,0,0,0,1|1,0,1,0,0,1,1,0|1,0,1,0,1,0,0,1|1,0,1,0,1,0,1,0|1,0,1,0,1,1,0,1|1,0,1,0,1,1,1,0|1,0,1,1,0,0,0,1|1,0,1,1,0,0,1,1|1,0,1,1,0,1,1,0|1,0,1,1,0,1,1,1|1,0,1,1,1,0,0,0|1,0,1,1,1,0,0,1|1,0,1,1,1,1,0,0|1,0,1,1,1,1,1,0|1,1,0,0,0,0,1,0|1,1,0,0,0,1,0,0|1,1,0,0,1,0,0,0|1,1,0,0,1,0,0,1|1,1,0,0,1,0,1,0|1,1,0,0,1,1,0,0|1,1,0,0,1,1,1,0|1,1,0,1,0,1,0,0|1,1,0,1,0,0,0,1|1,1,0,1,0,0,1,0|1,1,0,1,1,0,1,0|1,1,0,1,1,0,1,1|1,1,0,1,1,1,0,1|1,1,0,1,1,1,1,1|1,1,1,0,0,0,0,1|1,1,1,0,0,1,0,0|1,1,1,0,1,0,0,0|1,1,1,0,1,0,0,1|1,1,1,0,1,1,0,0|1,1,1,0,1,1,0,1|1,1,1,1,0,0,1,0|1,1,1,1,0,0,0,1|1,1,1,1,0,0,1,0|1,1,1,1,1,0,0,1|1,1,1,1,1,0,1,1|1,1,1,1,1,1,1,0|1,1,1,1,1,1,1,1|]);

int:n; %n many round of GIFT          
array[0..n,0..127] of var 0..1 : delta; %initial differential
array[0..n-1,0..127] of var 0..1 : DSB; %after Sbox
array[0..n-1,0..127] of var 0..1 : DX; %after permutation

set of int: SboxRange = 0..31; %partition into 16 different sboxes
var int: sbox_counter;

array[0..127] of int: perm = array1d(0..127,[0,33,66,99,96,1,34,67,64,97,2,35,32,65,98,3,4,37,70,103,100,5,38,71,68,101,6,39,36,69,102,7,8,41,74,107,104,9,42,75,72,105,10,43,40,73,106,11,12,45,78,111,108,13,46,79,76,109,14,47,44,77,110,15,16,49,82,115,112,17,50,83,80,113,18,51,48,81,114,19,20,53,86,119,116,21,54,87,84,117,22,55,52,85,118,23,24,57,90,123,120,25,58,91,88,121,26,59,56,89,122,27,28,61,94,127,124,29,62,95,92,125,30,63,60,93,126,31]);
                                 
%we want to make sure the initial difference is not zero
constraint sum([delta[0,j]|j in 0 ..127]) > 0;

%Sbox
%table is used to constraint the output to be the same as the one inside DDT Table.
constraint forall(r in 0..n-1)(
            forall(i in SboxRange)(
              table(array1d(0..7,[delta[r,4*i+3],delta[r,4*i+2],delta[r,4*i+1],delta[r,4*i],DSB[r,4*i+3],DSB[r,4*i+2],DSB[r,4*i+1],DSB[r,4*i]]),DDT)));

%permutation (bit permutation same as the table in GIFT paper)        
constraint forall(r in 0..n-1)(forall(i in 0..127)(
                    DX[r,perm[i]]=DSB[r,i]));
                    
constraint forall(r in 0..n-1)(forall(i in 0..127)(
                    DX[r,i]=delta[r+1,i]));

%the objective function is to minimize the sum of all active sboxes in n rounds of GIFT, n is a positive integer
constraint sbox_counter = sum(r in 0..n-1, i in SboxRange)(DSB[r,4*i+3]+DSB[r,4*i+2]+DSB[r,4*i+1] + DSB[r,4*i] > 0);

%our objective is to calculate the minimum number of active sboxes
solve minimize sbox_counter;

output [
        "Round "++show(r+1) ++"\n"++
        "Delta : " ++ show([delta[r,i] | i in 0..127]) ++ " \n"++
           "DX : " ++ show([DX[r,i] | i in 0..127]) ++ " \n"++
 if r<n then "DSB : " ++ show([DSB[r,i] | i in 0..127]) ++ " \n" else "" endif  | r in 0..n-1]++[show(sbox_counter)];